#include <iostream>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <functional>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <set>
using namespace std;

#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL)

#define uint unsigned int
#define ll long long
#define ull unsigned long long

#define ii pair < int, int >
#define Iii pair < int, ii >
#define LL pair < ll, ll >

#define INF 1'000'000'007
#define LINF 1'000'000'000'000'000'007

#define data ll
#define p_q priority_queue < data >
#define np_q priority_queue < data, vector < data >, greater < data > >


ll Answer;

ll mini(ll a, ll b)
{
	if (a < b)
		return a;
	return b;
}

int main(int argc, char** argv)
{
	int T, test_case;
	cin >> T;

	for (test_case = 0; test_case < T; test_case++)
	{
		Answer = INF;

		ll n;
		cin >> n;

		// n = a...a(b진수)

		// a...a(i진수). b <= sqrt(n)인 경우만
		for (ll i = 2; i * i <= n + i; i++)
		{
			// a...a(i진수)
			ll mod = n % i;
			int err = 0;

			if (mod)
			{
				ll temp = n;
				while (temp)
				{
					if (temp % i != mod)
					{
						err = 1;
						break;
					}

					temp /= i;
				}

				if (err == 0)
					Answer = mini(Answer, i);
			}
		}

		// ii(b진수). b > sqrt(n)인 경우 처리
		for (ll i = 1; i * i <= n + i; i++)
		{
			if (n % i == 0)
				if(i < n / i - 1) // b = n / i - 1;
					Answer = mini(Answer, n / i - 1);
		}

		// 한자리수인 경우
		if (Answer == INF)
			Answer = n - 1;

		// 작은 수 처리
		if (n < 3)
			Answer = n + 1;

		cout << "Case #" << test_case + 1 << endl;
		cout << Answer << endl;
	}

	return 0;
}
