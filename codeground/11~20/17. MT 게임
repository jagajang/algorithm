#include <iostream>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <functional>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <set>
using namespace std;

#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL)

#define uint unsigned int
#define ll long long
#define ul unsigned long long

#define ii pair < int, int >
#define iii pair < int, ii >
#define LL pair < ll, ll >

#define INF 1'000'000'007
#define LINF 1'000'000'000'000'000'007

#define data iii
#define p_q priority_queue < data > // max heap
#define np_q priority_queue < data, vector < data >, greater < data > > // min heap

string Answer;

int arr[1'000'005];
int brr[1'000'005];

int main(int argc, char** argv)
{
	fastio;
	int T, test_case;
	cin >> T;

	for (test_case = 0; test_case < T; test_case++)
	{
		Answer = "";

		int a, b, c;
		cin >> a >> b >> c;

		while (c--)
		{
			int n, k;
			cin >> n >> k;

			// k == 1인 경우
			int flag = 0;
			if (k == 1)
			{
				int mod = n % (a + b);
				if (mod > 0 && mod <= a)
					flag = 1;
			}

			// a가 시작하자마자 지는 경우
			if (n <= a)
				flag = 1;

			// a == b인 경우
			if (a == b)
			{
				int t = a * (k + 1);

				n %= t;

				if (0 < n && n <= a)
					flag = 1;
			}
			
			if (flag)
				Answer.push_back('b');
			else
				Answer.push_back('a');
		}

		cout << "Case #" << test_case + 1 << endl;
		cout << Answer << endl;
	}

	return 0;
}
