#include <iostream>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <functional>
#include <stack>
#include <queue>
#include <vector>
#include <map>
#include <set>
using namespace std;

#define fastio ios_base::sync_with_stdio(false); cin.tie(NULL)

#define uint unsigned int
#define ll long long
#define ull unsigned long long

#define ii pair < int, int >
#define Iii pair < int, ii >
#define LL pair < ll, ll >

#define INF 1'000'000'007
#define LINF 1'000'000'000'000'000'007

#define data ll
#define p_q priority_queue < data >
#define np_q priority_queue < data, vector < data >, greater < data > >


int Answer;
int arr[100'005];
int lef[100'005];
int rig[100'005];

int main(int argc, char** argv)
{
	int T, test_case;
	cin >> T;
	for (test_case = 0; test_case < T; test_case++)
	{
		Answer = 0;

		int n;
		cin >> n;

		for (int i = 0; i < n; i++)
			cin >> arr[i];

		if (arr[0])
			lef[0] = 1;
		else
			lef[0] = 0;

		for (int i = 1; i < n; i++)
			lef[i] = min(lef[i - 1] + 1, arr[i]);

		if (arr[n - 1])
			rig[n - 1] = 1;
		else
			rig[n - 1] = 0;

		for (int i = n - 2; i >= 0; i--)
			rig[i] = min(rig[i + 1] + 1, arr[i]);

		for (int i = 0; i < n; i++)
			Answer = max(Answer, min(lef[i], rig[i]));


		cout << "Case #" << test_case + 1 << endl;
		cout << Answer << endl;
	}

	return 0;
}
